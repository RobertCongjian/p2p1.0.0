<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gxa.p2p.common.mapper.UserinfoMapper">
    <resultMap id="BaseResultMap" type="com.gxa.p2p.common.domain.Userinfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="bitState" property="bitstate" jdbcType="BIGINT"/>
        <result column="realName" property="realname" jdbcType="VARCHAR"/>
        <result column="idNumber" property="idnumber" jdbcType="VARCHAR"/>
        <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR"/>
        <result column="incomeGrade_id" property="incomegradeId" jdbcType="BIGINT"/>
        <result column="marriage_id" property="marriageId" jdbcType="BIGINT"/>
        <result column="kidCount_id" property="kidcountId" jdbcType="BIGINT"/>
        <result column="educationBackground_id" property="educationbackgroundId" jdbcType="BIGINT"/>
        <result column="authScore" property="authscore" jdbcType="INTEGER"/>
        <result column="houseCondition_id" property="houseconditionId" jdbcType="BIGINT"/>
        <result column="realauthid" property="realauthid" jdbcType="BIGINT"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <association property="educationbackgroundItem" javaType="Systemdictionaryitem"
                     column="educationbackground_id"
                     select="com.gxa.p2p.common.mapper.SystemdictionaryitemMapper.selectByPrimaryKey"/>
        <association property="kidcountItem" javaType="Systemdictionaryitem"
                     column="kidcount_id"
                     select="com.gxa.p2p.common.mapper.SystemdictionaryitemMapper.selectByPrimaryKey"/>
        <association property="marriageItem" javaType="Systemdictionaryitem"
                     column="marriage_id"
                     select="com.gxa.p2p.common.mapper.SystemdictionaryitemMapper.selectByPrimaryKey"/>
        <association property="houseconditionItem" javaType="Systemdictionaryitem"
                     column="housecondition_id"
                     select="com.gxa.p2p.common.mapper.SystemdictionaryitemMapper.selectByPrimaryKey"/>
        <association property="incomegradeItem" javaType="Systemdictionaryitem"
                     column="incomegrade_id"
                     select="com.gxa.p2p.common.mapper.SystemdictionaryitemMapper.selectByPrimaryKey"/>

        <collection property="systemdictionaryitems" ofType="Systemdictionaryitem">
            <result column="sid" property="id"/>
            <result column="parentid" property="parentid"/>
        </collection>


    </resultMap>

    <insert id="insert" parameterType="com.gxa.p2p.common.domain.Userinfo" useGeneratedKeys="true" keyProperty="id">
        insert into `userinfo` (id, version, bitState, realName,
                                idNumber, phoneNumber, incomeGrade_id,
                                marriage_id, kidCount_id, educationBackground_id,
                                authScore, houseCondition_id, realauthid,
                                email)
        values (#{id}, #{version,jdbcType=INTEGER}, #{bitstate,jdbcType=BIGINT}, #{realname,jdbcType=VARCHAR},
                #{idnumber,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{incomegradeId,jdbcType=BIGINT},
                #{marriageId,jdbcType=BIGINT}, #{kidcountId,jdbcType=BIGINT}, #{educationbackgroundId,jdbcType=BIGINT},
                #{authscore,jdbcType=INTEGER}, #{houseconditionId,jdbcType=BIGINT}, #{realauthid,jdbcType=BIGINT},
                #{email,jdbcType=VARCHAR})
    </insert>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select id,
               version,
               bitState,
               realName,
               idNumber,
               phoneNumber,
               incomeGrade_id,
               marriage_id,
               kidCount_id,
               educationBackground_id,
               authScore,
               houseCondition_id,
               realauthid,
               email
        from userinfo
        where id = #{id};

    </select>
    <select id="getUserInfoAndSystemdictionaryById" resultMap="BaseResultMap">

        select ui.id,
               ui.version,
               ui.bitState,
               ui.realName,
               ui.idNumber,
               ui.phoneNumber,
               ui.incomeGrade_id,
               ui.marriage_id,
               ui.kidCount_id,
               ui.educationBackground_id,
               ui.authScore,
               ui.houseCondition_id,
               ui.realauthid,
               ui.email,
               sci.id as sid,
               sci.parentId
        from userinfo ui,
             systemdictionaryitem sci
        where ui.id = #{id}
          and (ui.houseCondition_id = sci.id or ui.educationBackground_id = sci.id or ui.incomeGrade_id = sci.id or
               ui.kidCount_id = sci.id or ui.marriage_id = sci.id)
    </select>
    <update id="updateItem">

        update userinfo
        <set>
            <if test="userinfo.educationbackgroundItem != null">
                educationBackground_id=#{userinfo.educationbackgroundItem.id},
            </if>
            <if test="userinfo.incomegradeItem != null">
                incomeGrade_id=#{userinfo.incomegradeItem.id},
            </if>
            <if test="userinfo.marriageItem != null">
                marriage_id=#{userinfo.marriageItem.id},
            </if>
            <if test="userinfo.kidcountItem != null">
                kidCount_id=#{userinfo.kidcountItem.id},
            </if>
            <if test="userinfo.houseconditionItem != null">
                houseCondition_id=#{userinfo.houseconditionItem.id},
            </if>
            <if test="userinfo.bitstate != null">
                bitState=#{userinfo.bitstate},
            </if>
            <if test="userinfo.phonenumber != null and userinfo.phonenumber != ''">
                phoneNumber = #{userinfo.phonenumber},
            </if>
            <if test="userinfo.idnumber != null and userinfo.idnumber != ''">
                idNumber = #{userinfo.idnumber} ,
            </if>
            <if test="userinfo.email != null and userinfo.email != ''">
                email = #{userinfo.email},
            </if>
            <if test="userinfo.authscore != null">
                authScore=#{userinfo.authscore},
            </if>
            <if test="userinfo.realauthid != null">
                realauthid=#{userinfo.realauthid}
            </if>

        </set>
        where id = #{id}

    </update>


</mapper>